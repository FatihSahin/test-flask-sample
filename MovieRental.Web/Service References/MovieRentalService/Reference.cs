//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieRental.Web.MovieRentalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RentalResult", Namespace="http://schemas.datacontract.org/2004/07/MovieRental.Service")]
    [System.SerializableAttribute()]
    public partial class RentalResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MovieRental.Models.Movie MovieField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MovieRental.Models.Movie Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieRentalService.IMovieRentalService")]
    public interface IMovieRentalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/GetMovie", ReplyAction="http://tempuri.org/IMovieRentalService/GetMovieResponse")]
        MovieRental.Models.Movie GetMovie(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/GetMovie", ReplyAction="http://tempuri.org/IMovieRentalService/GetMovieResponse")]
        System.Threading.Tasks.Task<MovieRental.Models.Movie> GetMovieAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/RentMovie", ReplyAction="http://tempuri.org/IMovieRentalService/RentMovieResponse")]
        MovieRental.Web.MovieRentalService.RentalResult RentMovie(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/RentMovie", ReplyAction="http://tempuri.org/IMovieRentalService/RentMovieResponse")]
        System.Threading.Tasks.Task<MovieRental.Web.MovieRentalService.RentalResult> RentMovieAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/AddMovie", ReplyAction="http://tempuri.org/IMovieRentalService/AddMovieResponse")]
        MovieRental.Models.Movie AddMovie(MovieRental.Models.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/AddMovie", ReplyAction="http://tempuri.org/IMovieRentalService/AddMovieResponse")]
        System.Threading.Tasks.Task<MovieRental.Models.Movie> AddMovieAsync(MovieRental.Models.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/DeleteMovie", ReplyAction="http://tempuri.org/IMovieRentalService/DeleteMovieResponse")]
        bool DeleteMovie(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/DeleteMovie", ReplyAction="http://tempuri.org/IMovieRentalService/DeleteMovieResponse")]
        System.Threading.Tasks.Task<bool> DeleteMovieAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/RandomMovie", ReplyAction="http://tempuri.org/IMovieRentalService/RandomMovieResponse")]
        MovieRental.Models.Movie RandomMovie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/RandomMovie", ReplyAction="http://tempuri.org/IMovieRentalService/RandomMovieResponse")]
        System.Threading.Tasks.Task<MovieRental.Models.Movie> RandomMovieAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/ResetMovie", ReplyAction="http://tempuri.org/IMovieRentalService/ResetMovieResponse")]
        void ResetMovie(MovieRental.Models.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/ResetMovie", ReplyAction="http://tempuri.org/IMovieRentalService/ResetMovieResponse")]
        System.Threading.Tasks.Task ResetMovieAsync(MovieRental.Models.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/HealthCheck", ReplyAction="http://tempuri.org/IMovieRentalService/HealthCheckResponse")]
        void HealthCheck();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieRentalService/HealthCheck", ReplyAction="http://tempuri.org/IMovieRentalService/HealthCheckResponse")]
        System.Threading.Tasks.Task HealthCheckAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieRentalServiceChannel : MovieRental.Web.MovieRentalService.IMovieRentalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieRentalServiceClient : System.ServiceModel.ClientBase<MovieRental.Web.MovieRentalService.IMovieRentalService>, MovieRental.Web.MovieRentalService.IMovieRentalService {
        
        public MovieRentalServiceClient() {
        }
        
        public MovieRentalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieRentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieRentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieRentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MovieRental.Models.Movie GetMovie(string name) {
            return base.Channel.GetMovie(name);
        }
        
        public System.Threading.Tasks.Task<MovieRental.Models.Movie> GetMovieAsync(string name) {
            return base.Channel.GetMovieAsync(name);
        }
        
        public MovieRental.Web.MovieRentalService.RentalResult RentMovie(string name) {
            return base.Channel.RentMovie(name);
        }
        
        public System.Threading.Tasks.Task<MovieRental.Web.MovieRentalService.RentalResult> RentMovieAsync(string name) {
            return base.Channel.RentMovieAsync(name);
        }
        
        public MovieRental.Models.Movie AddMovie(MovieRental.Models.Movie movie) {
            return base.Channel.AddMovie(movie);
        }
        
        public System.Threading.Tasks.Task<MovieRental.Models.Movie> AddMovieAsync(MovieRental.Models.Movie movie) {
            return base.Channel.AddMovieAsync(movie);
        }
        
        public bool DeleteMovie(string name) {
            return base.Channel.DeleteMovie(name);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMovieAsync(string name) {
            return base.Channel.DeleteMovieAsync(name);
        }
        
        public MovieRental.Models.Movie RandomMovie() {
            return base.Channel.RandomMovie();
        }
        
        public System.Threading.Tasks.Task<MovieRental.Models.Movie> RandomMovieAsync() {
            return base.Channel.RandomMovieAsync();
        }
        
        public void ResetMovie(MovieRental.Models.Movie movie) {
            base.Channel.ResetMovie(movie);
        }
        
        public System.Threading.Tasks.Task ResetMovieAsync(MovieRental.Models.Movie movie) {
            return base.Channel.ResetMovieAsync(movie);
        }
        
        public void HealthCheck() {
            base.Channel.HealthCheck();
        }
        
        public System.Threading.Tasks.Task HealthCheckAsync() {
            return base.Channel.HealthCheckAsync();
        }
    }
}
